<!--

/*******************************************************************************
 * Copyright (c) 2007-2008 Cambridge Semantics Incorporated.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
 
 Author: Rouben Meschian (<a href="mailto:rmeschian@cambridgesemantics.com">rmeschian@cambridgesemantics.com</a>) 

-->


<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>FOAF Browser</title>

    <script type="text/javascript">
    
        // UPDATE THE VALUES BELOW TO CONNECT TO YOUR SERVER
        var properties = {
            location            : "/cometd/",  // location of the comet service
            username            : "sysadmin", // user name for authentication
            password            : "123"       // password for authentication
        }
        
    </script>


    <script type="text/javascript" src="../../dojo/dojo.js"></script>
    
    <script type="text/javascript">
        
        // specify what anzo libraries are needed
        dojo.require("anzo.client.AnzoClient");
        dojo.require("anzo.rdf.parser.NTripleParser");
        dojo.require("anzo.rdf.GraphResource");
        dojo.require("anzo.client.BinaryStore");
        
        var anzoClient = new anzo.client.AnzoClient(properties);
        var binaryStore = new anzo.client.BinaryStore("/binarystore",anzoClient);
        
        // get the graph in which all data is written
        var sampleGraphURI = "http://example.org/foaf1";  // uri of the graph we want to use
        var sampleGraph = null;
        
        // hook update complete event handler to hide the loader
        dojo.connect(anzoClient, 'updateRepositoryComplete', function(success, errors) {
            if(success) {
                console.debug("Finished updating the server.");
                setStatus('Finished updating server', false);      
            } else {
                console.error("Failed to update server: "+errors);
                throw Error("Failed to update server: "+errors);
            }
        });
        
        // connect to the server
        console.debug("Connecting to the server.");
        anzoClient.connect(function(status, message) {
            
            if (status != anzo.messaging.CONNECTION_STATUS_CONNECTED) {
                console.error("Failed to connect to the server: "+message);
                throw Error("Failed to connect to the server: "+message);
            }
                
            console.debug("Connected to the server.");
            
            console.debug("Downloading graph from server.");
            setStatus('Loading', true);                 // show the loading div (may choose to put a throbber here)
            anzoClient.getReplicaGraph(sampleGraphURI, null, function (graph, errors) {
                if (!graph) {
                    throw Error("Error retrieving graph: "+errors);
                }
                setStatus('Finished loading', false);
                sampleGraph = graph;

                // hook to the search button
                document.getElementById('searchBtn').onclick = function(e) {
                    var searchText = document.getElementById('searchText').value; // get search text
                    
                    // create SPARQL query with the specifies earch criteria
                    var query = "SELECT ?value " +
                                " WHERE { " +
                                    " ?value <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://xmlns.com/foaf/0.1/Person> . ";
                                        if(searchText != '' && searchText != '*') {
                                            // do a text search only if the user specified a search string
                                            query += " ?value ?p ?txt . ?txt <http://openanzo.org/ontologies/2008/07/Anzo#textmatch> '"+searchText+"' . ";
                                        }
                    query +=     " } ";
                    
                    console.debug("Executing query: "+query);
                    
                    setStatus('Searching', true); 
                    var defaultGraphs = [sampleGraphURI]; // default graphs against which the query is executed
                    anzoClient.serverQuery(defaultGraphs, null, null, query, null, function(msg, success, error) {
                        
                        setStatus('Finished searching', false); 
                        
                        if (!success) {
                            console.error("Query execution failed: " + dojo.toJson(error));
                            throw Error("Query execution failed: " + dojo.toJson(error));
                        }
                        
                        var uris = [];
                        for(var i = 0; i < msg.results.bindings.length; i++) {
                            if(msg.results.bindings[i] && msg.results.bindings[i]['value'])
                                uris.push(msg.results.bindings[i]['value'].value);
                        }
                        
                        console.debug("Query execution successful.");
                        console.debug("Query execution results: "+dojo.toJson(msg));
                        
                        renderPeople(document.getElementById("searchResults"), uris);
                    });
                }
                
                // hook to the load button
                document.getElementById("loadBtn").onclick = function() {
                    var vals = document.getElementById("ntriples").value; // get specified n-triples
                    
                    anzoClient.begin(); // begin the transaction
                    console.debug("Parsing the specified triples N-Triples and loading them into the graph.");
                    anzo.rdf.parser.NTripleParser.parse(vals, sampleGraph); // load n-triples into the graph
                    anzoClient.commit(); // commit the transaction
                    
                    // send changes to the server
                    console.debug("Updating the server.");
                    setStatus('Updating server', true);                 // show the loading div (may choose to put a throbber here)
                    anzoClient.updateRepository();  // replicate with the server (send the triples we loaded up to the server, and bring down any new data that we are interested in)
                }
                
                // Handle the 'enter' key in the search text box.
                dojo.connect(dojo.byId("searchText"), "onkeypress", null, function(event) {
                    if (event.keyCode == dojo.keys.ENTER) {
                        dojo.byId("searchBtn").click();
                    }
                });
            });
        });
        
        var uriToBean = {};
        
        function renderPeople(table, uris) {
            
            // clear table
            while(table.tBodies[0].rows.length > 0)
                table.tBodies[0].deleteRow(0);
            
            for(var i = 0; i < uris.length; i++) {
                
                var _uri = uris[i];
                var _bean = uriToBean[_uri.toString()];
                if(_bean == null) {
                    _bean = new anzo.rdf.GraphResource(_uri, sampleGraph);
                    _bean.createPropertyMethods(["http://xmlns.com/foaf/0.1/firstName", "http://xmlns.com/foaf/0.1/surname", "http://xmlns.com/foaf/0.1/knows", "http://xmlns.com/foaf/0.1/depiction", "http://xmlns.com/foaf/0.1/phone"]);
                    uriToBean[_uri.toString()] = _bean;		
                }
                
                var tr = table.tBodies[0].insertRow(i);
                
                var td1 = tr.appendChild(document.createElement('td'));
                td1.innerHTML = '<img width=20 height=20 src="'+_bean.getDepiction()+'" />';
                
                var td2 = tr.appendChild(document.createElement('td'));
                td2.innerHTML = "<a href='javascript:void(0);'>"+_bean.getFirstName()+"  "+_bean.getSurname()+"</a>";
                
                td2.bean = _bean;
                td2.uri = _uri;
                
                td2.onclick = function() {
                
                    // using the bean to get data from the graph
                    document.getElementById('img').src             = this.bean.getDepiction();
                    document.getElementById('firstName').innerHTML = this.bean.getFirstName();
                    document.getElementById('lastName').innerHTML  = this.bean.getSurname();
                    document.getElementById('phone').innerHTML     = this.bean.getPhone();
                    
                    renderPeople(document.getElementById('knows'), this.bean.getKnows());
                    
                    // going against the graph directly (no beans here)
                    var stmts = sampleGraph.find(this.uri, 'http://xmlns.com/foaf/0.1/mbox', null); // find(s, p, ?)
                    var mbox_href = '';
                    var mbox_label = '';
                    if(stmts && stmts.length > 0) {
                        mbox_href = stmts[0].object.value;
                        mbox_label = stmts[0].object.value.replace('mailto:', '');
                    }
                    var a = document.getElementById("mbox");
                    a.href = mbox_href;
                    a.innerHTML = mbox_label;
                }
            }
        }
        
        function setStatus(msg, isLoading) {
            document.getElementById('loader').style.display    = isLoading ? ''     : 'none';
            document.getElementById('status').innerHTML = msg;
            //document.getElementById('container').style.display = isLoading ? 'none' : '';
        }
        
        function uploadFile() {
        	var bsf = binaryStore.addFile(true);
        	bsf.fireEvents = true;
        	var progress = function (len, read) { 
        		console.log(read+ " of " + len +" have been uploaded.");
        	}
        	dojo.connect(bsf, "onProgress", progress);
        	bsf.update("testfile", function (t, error) {
        		dojo.disconnect(bsf, "onProgress", progress);
        		alert(bsf.src);
        	}); 
        }
    </script>

</head>
<body>

    <div style='margin-bottom: 0px; padding: 0px;'>
        <img src='loader.gif' id='loader' style='display: none;' /> <span id='status'>Done</span>
    </div>
    
    <div id='container'>
    
        <h1>Sample FOAF Browser</h1>
        
        <p>
            Load FOAF data into the system by pasting it in N-Triples format into the text area below. Load it and browse the uploaded users.
        </p>
        
        <hr/>
        
        <table style='minHeight: 300px; width: 99%;'>
        
            <tr>
                
                <td style='border-right: solid gray 1px; width: 230px; padding-right: 5px;'>
                    <input id='searchText' style='text' /> <button id='searchBtn'>Search</button>
                    <table id='searchResults'>
                        <tbody></tbody>
                    </table>
                </td>
                
                <td style='padding-left: 5px;'>
                    <table>
                        <tr>
                            <td style='width: 105px;' >
                                <img id='img' width='100' height='100' />
                            </td>
                            <td>
                                <h2 style='padding: 0px; margin: 0px;'><span id='firstName'  ></span> <span id='lastName' ></span></h2>
                                <a id='mbox'></a><br/>
                                <span id='phone'></span>
                            </td>
                        </tr>
                        <tr>
                            <td COLSPAN=2 style='border-top: solid 1px gray;'>
                                <h5 style='margin: 0px; padding: 0px;'>Knows</h5>
                                <table id='knows'>
                                    <tbody></tbody>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            
        </table>
        
        <hr/>
        
        <h4>Load FOAF Data (<a href="http://www.w3.org/TR/rdf-testcases/#ntriples">N-Triples</a> format)</h4>
        
        
        <textarea id='ntriples' style='width: 99%; height: 250px;'>
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/firstName>   "Rouben"  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/surname>   "Meschian"  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/mbox>   <mailto:rmeschian@cambridgesemantics.com>  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/phone>   "617-555-1234"  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/depiction>   <http://www.cambridgesemantics.com/people/photo/rmeschian>  .
            <http://example.org/rouben>   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>   <http://xmlns.com/foaf/0.1/Person>  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/sean>  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/ben>  .
            <http://example.org/rouben>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/jordi>  .
            
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/firstName>   "Sean"  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/surname>   "Martin"  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/mbox>   <mailto:sean@cambridgesemantics.com>  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/phone>   "617-555-4637"  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/depiction>   <http://www.cambridgesemantics.com/people/photo/sean>  .
            <http://example.org/sean>   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>   <http://xmlns.com/foaf/0.1/Person>  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/rouben>  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/ben>  .
            <http://example.org/sean>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/jordi>  .
            
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/firstName>   "Ben"  .
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/surname>   "Szekely"  .
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/mbox>   <mailto:ben@cambridgesemantics.com>  .
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/phone>   "617-555-4321"  .
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/depiction>   <http://www.cambridgesemantics.com/people/photo/ben>  .
            <http://example.org/ben>   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>   <http://xmlns.com/foaf/0.1/Person>  .
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/rouben>  .
            <http://example.org/ben>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/sean>  .
            
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/firstName>   "Jordi"  .
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/surname>   "Albornoz Mulligan"  .
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/mbox>   <mailto:jordi@cambridgesemantics.com>  .
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/phone>   "617-555-3321"  .
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/depiction>   <http://www.cambridgesemantics.com/people/photo/jordi>  .
            <http://example.org/jordi>   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>   <http://xmlns.com/foaf/0.1/Person>  .
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/ben>  .
            <http://example.org/jordi>   <http://xmlns.com/foaf/0.1/knows>   <http://example.org/sean>  .
        </textarea>
        
        <button id='loadBtn'>Load</button>
    
    </div>
    <BR>
    <FORM id="testfile">
    	<INPUT type="file" name="file">
    </FORM>
    <button onclick="uploadFile()">Upload</button>
    
    
    
</body>
</html>
