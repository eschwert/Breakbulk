<%@ jet
		skeleton="generator.skeleton"
		package="org.openanzo.jet.services"
		class="ServicesCombusProxyTemplate"
		imports="org.openanzo.rdf.jastor.JastorUtils org.openanzo.ontologies.system.*  org.openanzo.rdf.vocabulary.DC java.util.Iterator org.openanzo.rdf.utils.WikiFormatUtils"%>
/*******************************************************************************
 * Copyright (c) 2004, 2007-2008 IBM Corporation and Cambridge Semantics Incorporated.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * File:        <%="$".toString()%>Source<%="$".toString()%>
 * Created by:  Generated Source from org.openanzo.jdbc.utils.opgen.jet
 * Created on:  Generated Source from org.openanzo.jdbc.utils.opgen.jet
 * Revision:	<%="$".toString()%>Id<%="$".toString()%>
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *	   Cambridge Semantics Incorporated - Fork to Anzo
 *******************************************************************************/
<% ServiceWrapper wrapper=(ServiceWrapper)argument;Service service = wrapper.service; %>
<% Boolean isDs=service.getIsDatasourceService(); if(isDs==null)isDs=false;%>
package <%=WikiFormatUtils.convertPackageDirectory(wrapper.task.getCombusPackage())%>;
import java.io.IOException;

import javax.jms.JMSException;
import javax.jms.TextMessage;

import org.openanzo.exceptions.AnzoException;
import org.openanzo.exceptions.ExceptionConstants;
//import org.openanzo.rdf.Constants;
import org.openanzo.services.IOperationContext;
import org.openanzo.rdf.utils.SerializationConstants;
//import org.openanzo.rdf.URI;
<%if(isDs){%>
import org.openanzo.combus.CombusDatasource;
import org.openanzo.combus.BaseCombusProxyDatasourceService;
<%}else{%>
import org.openanzo.combus.BaseCombusProxyService;
<%}%>
 /**
 * <% if(service.getPropertyValue(DC.TITLE)!=null){%><%=JastorUtils.getStingValue(service.getPropertyValue(DC.TITLE))%><%}%> interface
 * <% if(service.getPropertyValue(DC.DESCRIPTION)!=null){%><%=JastorUtils.getStingValue(service.getPropertyValue(DC.DESCRIPTION))%><%}%>
 * @author Generated Code
 *
 */
public class Combus<%=service.getName()%>Proxy extends <%if(isDs){%>BaseCombusProxyDatasourceService<%}else{%>BaseCombusProxyService<%}%> implements <%=WikiFormatUtils.convertPackageDirectory(((isDs)?"org/openanzo/datasource/":wrapper.task.getInterfacePackage()))%>.I<%=service.getName()%>{
    /** Stats for object*/
   protected org.openanzo.services.DynamicServiceStats stats=null;
<%if(isDs){%>
   protected CombusDatasource datasource=null;
  <%}%>
    /**
     * Create a new JMS<%=service.getName()%>Proxy
<%if(isDs){%>     
	 * @param datasource Datasource to which this service belongs
<%}%>
     * @param combusConnection Connection which this proxy class uses to communicate to the server
     *
     */
    public Combus<%=service.getName()%>Proxy( <%if(isDs){%>CombusDatasource datasource ,<%}%>org.openanzo.combus.CombusConnection combusConnection) {
        
        <%if(isDs){%>super(datasource,combusConnection);<%}else{%>
        super(combusConnection);
        <%}%>
        stats=new org.openanzo.services.DynamicServiceStats(<%for(Iterator<Operation> operations=JastorUtils.sortByTitle(service.getOperation()).iterator();operations.hasNext();){%><%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(operations.next().getName())%><%if(operations.hasNext()){%>,<%}}%>);
	
    }

	public String getName(){
		return "Combus<%=service.getName()%>Proxy";
	}
	
	public String getDescription(){
		return "Combus  <%=service.getName()%> Proxy Service";
	}

    /** Statistics object for this service*/
    public org.openanzo.services.DynamicServiceStats getStatistics(){
    	return stats;
    }
    
<%
	for(Operation operation:JastorUtils.sortByTitle(service.getOperation())){

	Parameter result=null;
	String resultJavaType=null;
	String resultDefaultFormat=null;
	String resultSerializer=null;
	boolean bypassPool=operation.getBypassPool()!=null?operation.getBypassPool():false;
	boolean resultHasDefaultFormat=false;
	Iterator<Parameter> results=operation.getResult().iterator();
	if (results.hasNext()){
		result=results.next();
		if(result!=null){
			resultJavaType=(result.getType().getJavaType()!=null)?result.getType().getJavaType():null;
			resultSerializer=(result.getType().getSerializer()!=null)?result.getType().getSerializer():null;
			resultDefaultFormat=(result.getType().getDefaultJMSFormat()!=null)?result.getType().getDefaultJMSFormat().getJavaType():null;
			resultHasDefaultFormat=result.getType().getDefaultJMSFormat()!=null||result.getType().getDefaultRestFormat()!=null||result.getType().getDefaultWSFormat()!=null;
		}
	}
	Parameter parameters[]=new Parameter[8];
	String parameterName[]=new String[8];
	String transportName[]=new String[8];
	String javaType[]=new String[8];
	String type[]=new String[8];
	boolean nullAllowed[]=new boolean[8];
	String defaultFormat[]=new String[8];
	boolean hasDefaultFormat[]=new boolean[8];
	boolean isPrimitive[]=new boolean[8];
	String serializer[]=new String[8];
	int propertyLocation[]=new int[8];
	int readerParam=-1;
	if(operation.getRequestParameter0()!=null){ parameters[0]=operation.getRequestParameter0();}
	if(operation.getRequestParameter1()!=null){ parameters[1]=operation.getRequestParameter1();}
	if(operation.getRequestParameter2()!=null){ parameters[2]=operation.getRequestParameter2();}
	if(operation.getRequestParameter3()!=null){ parameters[3]=operation.getRequestParameter3();}
	if(operation.getRequestParameter4()!=null){ parameters[4]=operation.getRequestParameter4();}
	if(operation.getRequestParameter5()!=null){ parameters[5]=operation.getRequestParameter5();}
	if(operation.getRequestParameter6()!=null){ parameters[6]=operation.getRequestParameter6();}
	if(operation.getRequestParameter7()!=null){ parameters[7]=operation.getRequestParameter7();}

	for(int i=0;i<8;i++){
		if(parameters[i]!=null){
			parameterName[i]=transportName[i]=parameters[i].getName();
			if(parameters[i].getType()!=null){
				type[i]=javaType[i]=parameters[i].getType().getJavaType();
				serializer[i]=parameters[i].getType().getSerializer();
				String location=parameters[i].getParameterLocation();
				if(location==null){
					propertyLocation[i]=0;
				}else if("body".equals(location)){
					propertyLocation[i]=1;
				}else if("parameter".equals(location)){
					propertyLocation[i]=0;
				}else if("transport".equals(location)){
					propertyLocation[i]=2;
				}else if("callbackHandler".equals(location)){
					propertyLocation[i]=-1;
				}
				if(javaType[i]!=null&&("int".equals(javaType[i])||"long".equals(javaType[i])||"boolean".equals(javaType[i]))){
					isPrimitive[i]=true;
				}
			}

			Boolean nullAllowedBoolean=parameters[i].getNullAllowed();
			nullAllowed[i]=(nullAllowedBoolean!=null)?nullAllowedBoolean.booleanValue():true;
			defaultFormat[i]=(parameters[i].getType().getDefaultJMSFormat()!=null)?parameters[i].getType().getDefaultJMSFormat().getJavaType():null;
			hasDefaultFormat[i]=parameters[i].getType().getDefaultJMSFormat()!=null||parameters[i].getType().getDefaultRestFormat()!=null||parameters[i].getType().getDefaultWSFormat()!=null;

		}
	}
%>
    public <%if(resultJavaType!=null){%><%=resultJavaType%><%}else{%>void<%}%> <%=operation.getName()%>(IOperationContext context<%for(int i=0;i<8;i++){%><%if (parameters[i]!=null){%>,<%=javaType[i]%> <%=parameterName[i]%><%}%><%}%>) throws AnzoException{
        java.io.StringWriter responseWriter = new java.io.StringWriter();
<%
	for(int i=0;i<8;i++){
		if(javaType[i]!=null){
			switch(propertyLocation[i]){
				case 1:{
					if(!nullAllowed[i]){%>
        if(<%=parameterName[i]%>==null){
             throw new AnzoException(ExceptionConstants.CORE.NULL_PARAMETER,PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>);
        }
<%}%>
        String _requestBody = null;
<%if(nullAllowed[i]){%>
		if(<%=parameterName[i]%>!=null){
<%}%>
	    _requestBody= <%=serializer[i]%>.serialize(<%=parameterName[i]%>, <%=defaultFormat[i]%>);
<%if(nullAllowed[i]){%>
		}
<%}
					readerParam=i;
			   		transportName[i]="_requestBody";
			    	javaType[i]="String";
				}
				break;

			}
		}
	}%>
<%if(resultHasDefaultFormat){%>
		String resultFormat=<%=resultDefaultFormat%>;
<%}%>
<%if(readerParam>-1&&defaultFormat[readerParam]!=null){%>
		String <%=parameterName[readerParam]%>Format=<%=defaultFormat[readerParam]%>;
<%}%>
        <%=operation.getName()%>(context<%for(int i=0;i<8;i++){%><%if(parameters[i]!=null&&propertyLocation[i]>-1){%>,<%=transportName[i]%><%}%><%if(defaultFormat[i]!=null&&readerParam==i){%>,<%=parameterName[readerParam]%>Format<%}%><%}%>,responseWriter<%if(resultHasDefaultFormat){%>,resultFormat<%}%>);
<% if(resultSerializer!=null){ %>
<%if(resultJavaType!=null){%>
		return <%=resultSerializer%>.deserialize(responseWriter.toString(),<%if(resultHasDefaultFormat){%>resultFormat<%}else{%>null<%}%><%for(int i=0;i<8;i++){if(parameters[i]!=null&&propertyLocation[i]==-1){%>,<%=parameterName[i]%><%}}%>);
	 	<%}else{%>
        <%=resultSerializer%>.deserialize(responseWriter.toString(),<%if(resultHasDefaultFormat){%>resultFormat<%}else{%>null<%}%><%for(int i=0;i<8;i++){if(parameters[i]!=null&&propertyLocation[i]==-1){%>,<%=parameterName[i]%><%}}%>);
<%}}%>
	}

    public void <%=operation.getName()%>(IOperationContext context<%for(int i=0;i<8;i++){%><%if(parameters[i]!=null&&propertyLocation[i]>-1){%>,<%if (javaType[i]!=null){%><%=javaType[i]%><%}else{%><%=javaType[i]%><%}%> <%=parameterName[i]%><%}%><%if(defaultFormat[i]!=null&&readerParam==i){%>,String <%=parameterName[i]%>Format<%}%><%}%>, java.io.Writer output<%if(resultHasDefaultFormat){%>, String resultFormat<%}%>) throws AnzoException{
     	if (!combusConnection.isConnected()) {
     	    throw new AnzoException( ExceptionConstants.CLIENT.CLIENT_NOT_CONNECTED);
            //combusConnection.connect();
        }
        long start=0;
        if (stats.isEnabled()) {
            start = System.currentTimeMillis();
        }
        try{
        <%for(int i=0;i<8;i++){
		if(parameterName[i]!=null&&!nullAllowed[i]&&!isPrimitive[i]){%>
       	    if(<%=parameterName[i]%>==null){
                 throw new AnzoException(ExceptionConstants.CORE.NULL_PARAMETER,PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>);
            }
<%}%>
<%}%>
            TextMessage request = combusConnection.createMessage();
            org.openanzo.combus.JMSMessageWrapper messageWrapper=new org.openanzo.combus.JMSMessageWrapper(request);

<%if(resultHasDefaultFormat){%>
            messageWrapper.setProperty(SerializationConstants.resultFormat, resultFormat);
<%}%>
            messageWrapper.setProperty(SerializationConstants.operation, <%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(operation.getName())%>);
            if (context.getAttribute(SerializationConstants.userDescription) != null) {
                messageWrapper.setProperty(SerializationConstants.userDescription, context.getAttribute(SerializationConstants.userDescription, String.class));
            }
            
<%for(int i=0;i<8;i++){%>
<%if(defaultFormat[i]!=null){%>
            messageWrapper.setProperty(PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>Format, <%if(readerParam==i){%><%=parameterName[i]%>Format<%}else{%><%=defaultFormat[i]%><%}%>);
<%}%>
<%if(javaType[i]!=null){
	switch(propertyLocation[i]){
		case 0:%>
<%if(!isPrimitive[i]&&nullAllowed[i]){%>
            if(<%=parameterName[i]%>!=null)
<%}%>
            <%=serializer[i]%>.serialize(<%=parameterName[i]%>,PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>,<%=(defaultFormat[i]!=null)?defaultFormat[i]:"null"%>,messageWrapper);
		<%
		break;
		case 1:%>
            messageWrapper.setBody(<%=parameterName[i]%>);
<%break;	}%>
<%}%>
<%}%>
<%if(bypassPool){%>
			messageWrapper.setProperty(SerializationConstants.bypassPool,"true");
<%}%>
            TextMessage response = combusConnection.requestResponse(context, <%=WikiFormatUtils.convertPackageDirectory(((isDs)?"org/openanzo/datasource/":wrapper.task.getInterfacePackage()))%>.I<%=service.getName()%>.SERVICE_NAME, request, getTimeout());
            try {
	            if (response != null && response.getText() != null) {
	                output.write(response.getText());
	                output.flush();
	            }
	        } catch (IOException ioe) {
	            throw new AnzoException( ExceptionConstants.IO.WRITE_ERROR, ioe);
	        } catch (JMSException jmsex) {
	            throw new AnzoException( ExceptionConstants.COMBUS.JMS_MISSING_MESSAGE_PARAMETER, jmsex);
	        }
        }finally{
       		if (stats.isEnabled()) {
       		      stats.use("<%=operation.getName()%>",(System.currentTimeMillis() - start));
            }
        }
    }
<%}%>
}
