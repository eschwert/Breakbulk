<%@ jet
skeleton="generator.skeleton"
		package="org.openanzo.jet.services"
		class="ServicesWsListenerTemplate"
		imports="org.openanzo.rdf.jastor.JastorUtils org.openanzo.ontologies.system.*  java.util.Iterator org.openanzo.rdf.utils.WikiFormatUtils"%>
/*******************************************************************************
 * Copyright (c) 2004, 2007-2008 IBM Corporation and Cambridge Semantics Incorporated.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * File:        <%="$".toString()%>Source<%="$".toString()%>
 * Created by:  Generated Source from org.openanzo.jdbc.utils.opgen.jet
 * Created on:  Generated Source from org.openanzo.jdbc.utils.opgen.jet
 * Revision:	<%="$".toString()%>Id<%="$".toString()%>
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *	   Cambridge Semantics Incorporated - Fork to Anzo
 *******************************************************************************/
package org.openanzo.server.endpoint.ws;
import java.io.StringWriter;

import org.openanzo.exceptions.ExceptionConstants;
import org.openanzo.exceptions.AnzoException;
<% @SuppressWarnings("unchecked") // marshal argument %>
<% java.util.List<Service> services = (java.util.List<Service>)argument; %>
 /**
 * Webservice listener for all services
 * @author Generated Code
 */

public class WSListener extends org.openanzo.server.endpoint.ws.BaseWSListener{
    private static final org.slf4j.Logger          log              = org.slf4j.LoggerFactory.getLogger(WSListener.class);

    /**
     * Create a new WSListener
     *
     */
    public WSListener() {
        super();
  	}

<% for(Service service:services){ if(service.getAvailableOverWS()!=null&&service.getAvailableOverWS()){%>
<%
	for(Operation operation:JastorUtils.sortByTitle(service.getOperation())){


	Parameter result=null;
	String resultDefaultFormat=null;
	boolean resultHasDefaultFormat=false;
	Iterator<Parameter> results=operation.getResult().iterator();
	if (results.hasNext()){
		result=results.next();
		if(result!=null){
			resultDefaultFormat=(result.getType().getDefaultJMSFormat()!=null)?result.getType().getDefaultJMSFormat().getJavaType():null;
			resultHasDefaultFormat=(resultDefaultFormat!=null);
		}
	}
	Parameter parameters[]=new Parameter[8];
	String parameterName[]=new String[8];
	String javaType[]=new String[8];
	String type[]=new String[8];
	String defaultValue[]=new String[8];
	boolean nullAllowed[]=new boolean[8];
	String defaultFormat[]=new String[8];
	String serializer[]=new String[8];
	int propertyLocation[]=new int[8];
	int readerParam=-1;
	if(operation.getRequestParameter0()!=null){ parameters[0]=operation.getRequestParameter0();}
	if(operation.getRequestParameter1()!=null){ parameters[1]=operation.getRequestParameter1();}
	if(operation.getRequestParameter2()!=null){ parameters[2]=operation.getRequestParameter2();}
	if(operation.getRequestParameter3()!=null){ parameters[3]=operation.getRequestParameter3();}
	if(operation.getRequestParameter4()!=null){ parameters[4]=operation.getRequestParameter4();}
	if(operation.getRequestParameter5()!=null){ parameters[5]=operation.getRequestParameter5();}
	if(operation.getRequestParameter6()!=null){ parameters[6]=operation.getRequestParameter6();}
	if(operation.getRequestParameter7()!=null){ parameters[7]=operation.getRequestParameter7();}

	for(int i=0;i<8;i++){
		if(parameters[i]!=null){
			parameterName[i]=parameters[i].getName();
			if(parameters[i].getType()!=null){
				type[i]=javaType[i]=parameters[i].getType().getJavaType();
				defaultValue[i]=parameters[i].getType().getDefaultValue();
				serializer[i]=parameters[i].getType().getSerializer();
				String location=parameters[i].getParameterLocation();
				if(location==null){
					propertyLocation[i]=0;
				}else if("body".equals(location)){
					propertyLocation[i]=1;
				}else if("parameter".equals(location)){
					propertyLocation[i]=0;
				}else if("transport".equals(location)){
					propertyLocation[i]=2;
				}else if("callbackHandler".equals(location)){
					propertyLocation[i]=-1;
				}
				Boolean nullAllowedBoolean=parameters[i].getNullAllowed();
				nullAllowed[i]=(nullAllowedBoolean!=null)?nullAllowedBoolean.booleanValue():true;
				defaultFormat[i]=(parameters[i].getType().getDefaultWSFormat()!=null)?parameters[i].getType().getDefaultWSFormat().getJavaType():null;

			}
		}
	}
%>
    /**
     * Execute <%=operation.getName()%>
     *
     * @param bodyElements
     *            soap element containing request
     * @return response to call
     * @throws org.apache.axis.AxisFault
     */
    @SuppressWarnings("unused") // some local variables are not used by all generated classes
    public org.apache.axis.message.SOAPBodyElement[] <%=operation.getName()%>(org.apache.axis.message.SOAPBodyElement[] bodyElements) throws org.apache.axis.AxisFault {
	    try{
	    	WSServlet repositoryServlet = getParentServlet();
	    	long start=0;
	        if (repositoryServlet.get<%=service.getName()%>().getStatistics()!=null&&repositoryServlet.get<%=service.getName()%>().getStatistics().isEnabled()) {
	           	start = System.currentTimeMillis();
	           	repositoryServlet.get<%=service.getName()%>().getStatistics().get<%=WikiFormatUtils.capFirstLetter(operation.getName())%>Use().increment();
	       	}
	        try{
	        	org.openanzo.services.serialization.WSMessageWrapper messageWrapper=new org.openanzo.services.serialization.WSMessageWrapper(bodyElements[0]);
	       		String operationId = null;
		        javax.xml.soap.SOAPElement operationIdElement = bodyElements[0].getChildElement(org.openanzo.common.SoapConstants.operationidQName);
		        if (operationIdElement != null) {
		            operationId = org.openanzo.serialization.SoapSerializationUtils.deserialize(operationIdElement);
		        } else {
		            operationId = org.openanzo.services.BaseOperationContext.generateOperationId();
		        }

<%if(resultHasDefaultFormat){%>
				javax.xml.soap.SOAPElement resultFormatElement = bodyElements[0].getChildElement(org.openanzo.services.services.proxy.ws.<%=service.getName()%>SoapConstants.<%=org.openanzo.rdf.utils.WikiFormatUtils.capFirstLetter(operation.getName())%>.resultFormatQName);
		        String resultFormat = (resultFormatElement != null)?org.openanzo.serialization.SoapSerializationUtils.deserialize(resultFormatElement):<%=resultDefaultFormat%>;
<%}%>
	       		org.openanzo.services.IOperationContext context = getRequestContext(org.openanzo.services.services.proxy.ws.<%=service.getName()%>SoapConstants.<%=org.openanzo.rdf.utils.WikiFormatUtils.capFirstLetter(operation.getName())%>.name.toString(), operationId,bodyElements[0]);
<%for(int i=0;i<8;i++){%>
<%if(parameters[i]!=null&&propertyLocation[i]>-1){%>
 				boolean <%=parameterName[i]%>Exists = messageWrapper.hasProperty(org.openanzo.services.services.I<%=service.getName()%>.PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>);
<%if(!nullAllowed[i]){%>
	       	 	if(!<%=parameterName[i]%>Exists){
	       	    	throw new AnzoException(ExceptionConstants.CORE.NULL_PARAMETER,org.openanzo.services.services.I<%=service.getName()%>.PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>);
	       	 	}
<%}%>
<%if(defaultFormat[i]!=null){%>
				boolean <%=parameterName[i]%>FormatExists = messageWrapper.hasProperty(org.openanzo.services.services.I<%=service.getName()%>.PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>Format);
		      	String <%=parameterName[i]%>Format = (<%=parameterName[i]%>FormatExists)?messageWrapper.getProperty(org.openanzo.services.services.I<%=service.getName()%>.PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>Format):<%=defaultFormat[i]%>;
<%}%>
<%if(propertyLocation[i]==1){%>
				String <%=parameterName[i]%> = messageWrapper.getProperty(org.openanzo.services.services.I<%=service.getName()%>.PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>);
			<%readerParam=i;%>
<%}else {%>
				<%=javaType[i]%> <%=parameterName[i]%> =<%if(nullAllowed[i]){%>(<%=parameterName[i]%>Exists)?<%}%><%=serializer[i]%>.deserialize(messageWrapper,org.openanzo.services.services.I<%=service.getName()%>.PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(parameterName[i])%>, <%if(defaultFormat[i]!=null){%><%=parameterName[i]%>Format<%}else{%>null<%}%>)<%if(nullAllowed[i]){%>:null<%}%>;
<%}%>
<%}}%>
	 			StringWriter output = new StringWriter();
	            repositoryServlet.get<%=service.getName()%>().<%=operation.getName()%>(context<%for(int i=0;i<8;i++){%><%if(parameters[i]!=null&&propertyLocation[i]>-1){%>,<%=parameterName[i]%><%}%><%if(defaultFormat[i]!=null&&readerParam==i){%>,<%=parameterName[readerParam]%>Format<%}%><%}%>, output<%if(resultHasDefaultFormat){%>,resultFormat<%}%>);
	            org.apache.axis.message.SOAPBodyElement ret = new org.apache.axis.message.SOAPBodyElement();
	            ret.setQName(org.openanzo.services.services.proxy.ws.<%=service.getName()%>SoapConstants.<%=org.openanzo.rdf.utils.WikiFormatUtils.capFirstLetter(operation.getName())%>.responseQName);
	            String out = output.toString();
	            if (out != null && out.length() > 0) {
	                javax.xml.soap.SOAPElement resultsElement = ret.addChildElement(org.openanzo.services.services.proxy.ws.<%=service.getName()%>SoapConstants.<%=org.openanzo.rdf.utils.WikiFormatUtils.capFirstLetter(operation.getName())%>.resultsName);
	                org.openanzo.serialization.SoapSerializationUtils.serializeStringToElement(out, resultsElement);
	            }
	            org.apache.axis.message.SOAPBodyElement[] element = new org.apache.axis.message.SOAPBodyElement[] { ret };
	            return element;
	        }finally{
       			if (repositoryServlet.get<%=service.getName()%>().getStatistics()!=null&&repositoryServlet.get<%=service.getName()%>().getStatistics().isEnabled()) {
            	    repositoryServlet.get<%=service.getName()%>().getStatistics().get<%=WikiFormatUtils.capFirstLetter(operation.getName())%>Duration().addTime((System.currentTimeMillis() - start));
           	 	}
    		}
        } catch (javax.xml.soap.SOAPException e) {
            log.error(org.openanzo.rdf.utils.LogUtils.WS_EXCEPTION_FOLLOWS, e);
            throw new org.openanzo.exceptions.AnzoAxisFault( ExceptionConstants.IO.SOAP_ERROR, e.getMessage());
        } catch (org.openanzo.exceptions.AnzoException e) {
            log.info(org.openanzo.rdf.utils.LogUtils.EXCEPTION_FOLLOWS, e);
            throw new org.openanzo.exceptions.AnzoAxisFault(e);
        } catch (org.openanzo.exceptions.AnzoRuntimeException e) {
            log.error(org.openanzo.rdf.utils.LogUtils.EXCEPTION_FOLLOWS, e);
            throw new org.openanzo.exceptions.AnzoAxisFault(e);
        } catch (Throwable e) {
            log.error(org.openanzo.rdf.utils.LogUtils.WS_EXCEPTION_FOLLOWS, e);
            throw new org.openanzo.exceptions.AnzoAxisFault(ExceptionConstants.IO.SOAP_ERROR, e.getMessage());
        }

	}
<%}}}%>
}
