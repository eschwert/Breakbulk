<%@ jet
		skeleton="generator.skeleton"
		package="org.openanzo.jet.services"
		class="ServicesInterfaceTemplate"
		imports="org.openanzo.rdf.jastor.JastorUtils org.openanzo.ontologies.system.*  org.openanzo.rdf.vocabulary.DC java.util.Iterator org.openanzo.rdf.utils.WikiFormatUtils"%>
/*******************************************************************************
 * Copyright (c) 2004, 2007-2008 IBM Corporation and Cambridge Semantics Incorporated.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * File:        <%="$".toString()%>Source<%="$".toString()%>
 * Created by:  Generated Source from org.openanzo.jdbc.utils.opgen.jet
 * Created on:  Generated Source from org.openanzo.jdbc.utils.opgen.jet
 * Revision:	<%="$".toString()%>Id<%="$".toString()%>
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *	   Cambridge Semantics Incorporated - Fork to Anzo
 *******************************************************************************/
<% ServiceWrapper wrapper=(ServiceWrapper)argument;Service service = wrapper.service; %>
package <%=WikiFormatUtils.convertPackageDirectory(wrapper.task.getInterfacePackage())%>;
import org.openanzo.exceptions.AnzoException;
import org.openanzo.rdf.Constants;
import org.openanzo.services.IStatisticsProvider;
import org.openanzo.services.IOperationContext;
import org.openanzo.rdf.URI;

 /**
 * <% if(service.getPropertyValue(DC.TITLE)!=null){%><%=JastorUtils.getStingValue(service.getPropertyValue(DC.TITLE))%><%}%> interface
 * <% if(service.getPropertyValue(DC.DESCRIPTION)!=null){%><%=JastorUtils.getStingValue(service.getPropertyValue(DC.DESCRIPTION))%><%}%>
 * @author Generated Code
 *
 */
public interface I<%=service.getName()%> extends IStatisticsProvider <%Boolean isDs=service.getIsDatasourceService();if(isDs==null)isDs=false;%><%if (isDs){%>,org.openanzo.datasource.IDatasourceComponent<%}%>{
	/** Service's Name in {@link String} form */
    public static final String SERVICE_NAME = Constants.NAMESPACES.SERVICE_PREFIX + "<%=service.getName()%>";

    /** Service's Name in {@link URI} form */
    public static final URI    SERVICE_URI  = Constants.valueFactory.createURI(SERVICE_NAME);

    /* Statistics object for this service
    public <%=WikiFormatUtils.convertPackageDirectory(wrapper.task.getStatsPackage())%>.<%=service.getName()%>Stats getStatistics();
    */
<%
	java.util.Set<String> paramNames=new java.util.TreeSet<String>();
	java.util.Set<String> formatParamNames=new java.util.TreeSet<String>();
	for(Operation operation:JastorUtils.sortByTitle(service.getOperation())){

		java.util.Iterator<Parameter> parameters=operation.getRequestParameter().iterator();
		while(parameters.hasNext()){
			Parameter parameter=parameters.next();
			paramNames.add(parameter.getName());
			if(parameter.getType()!=null&&(parameter.getType().getDefaultJMSFormat()!=null||parameter.getType().getDefaultRestFormat()!=null||parameter.getType().getDefaultWSFormat()!=null)){
				formatParamNames.add(parameter.getName());
			}
		}
	}
	for(String paramName:paramNames){%>
	/**Constant for parameter <%=paramName%> */
	public static final String PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(paramName)%> = "<%=paramName%>";
<%	}
	for(String paramName:formatParamNames){%>
	/**Constant for parameter <%=paramName%> format */
	public static final String PARAM_<%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(paramName)%>Format = "<%=paramName%>Format";
<%	}
%>
<%
	for(Operation operation:JastorUtils.sortByTitle(service.getOperation())){


	Parameter result=null;
	String resultJavaType=null;
	boolean resultHasDefaultFormat=false;
	Iterator<Parameter> results=operation.getResult().iterator();
	if (results.hasNext()){
		result=results.next();
		if(result!=null){
			resultJavaType=(result.getType().getJavaType()!=null)?result.getType().getJavaType():null;
			resultHasDefaultFormat=result.getType().getDefaultJMSFormat()!=null||result.getType().getDefaultRestFormat()!=null||result.getType().getDefaultWSFormat()!=null;
		}
	}
	Parameter parameters[]=new Parameter[8];
	String parameterName[]=new String[8];
	String javaType[]=new String[8];
	String type[]=new String[8];
	boolean nullAllowed[]=new boolean[8];
	boolean hasDefaultFormat[]=new boolean[8];
	int propertyLocation[]=new int[8];
	if(operation.getRequestParameter0()!=null){ parameters[0]=operation.getRequestParameter0();}
	if(operation.getRequestParameter1()!=null){ parameters[1]=operation.getRequestParameter1();}
	if(operation.getRequestParameter2()!=null){ parameters[2]=operation.getRequestParameter2();}
	if(operation.getRequestParameter3()!=null){ parameters[3]=operation.getRequestParameter3();}
	if(operation.getRequestParameter4()!=null){ parameters[4]=operation.getRequestParameter4();}
	if(operation.getRequestParameter5()!=null){ parameters[5]=operation.getRequestParameter5();}
	if(operation.getRequestParameter6()!=null){ parameters[6]=operation.getRequestParameter6();}
	if(operation.getRequestParameter7()!=null){ parameters[7]=operation.getRequestParameter7();}

	for(int i=0;i<8;i++){
		if(parameters[i]!=null){
			String location=parameters[i].getParameterLocation();
			if(location==null){
				propertyLocation[i]=0;
			}else if("body".equals(location)){
				propertyLocation[i]=1;
			}else if("parameter".equals(location)){
				propertyLocation[i]=0;
			}else if("transport".equals(location)){
				propertyLocation[i]=2;
			}else if("callbackHandler".equals(location)){
				propertyLocation[i]=-1;
			}
			parameterName[i]=parameters[i].getName();
			if(parameters[i].getType()!=null){
				type[i]=javaType[i]=parameters[i].getType().getJavaType();

			}

			Boolean nullAllowedBoolean=parameters[i].getNullAllowed();
			nullAllowed[i]=(nullAllowedBoolean!=null)?nullAllowedBoolean.booleanValue():true;
			hasDefaultFormat[i]=parameters[i].getType().getDefaultJMSFormat()!=null||parameters[i].getType().getDefaultRestFormat()!=null||parameters[i].getType().getDefaultWSFormat()!=null;
		}
	}
	int readerParam=-1;
%>
	/**<%=operation.getName()%> operation name constant */
    public static final String <%=org.openanzo.rdf.utils.WikiFormatUtils.formatConstantString(operation.getName())%> = "<%=operation.getName()%>";
    /**
     * <% if(operation.getPropertyValue(DC.DESCRIPTION)!=null){%><%=JastorUtils.getStingValue(operation.getPropertyValue(DC.DESCRIPTION))%><%}%>
     *
     * @param context
     *            {@link IOperationContext} context for this operation
<%for(int i=0;i<8;i++){%>
<%if(parameterName[i]!=null){%>
     * @param <%=parameterName[i]%>
     *            <%=JastorUtils.getStingValue(parameters[i].getPropertyValue(DC.DESCRIPTION))%>
<%}%>
<%}%>
<%if(result!=null&&resultJavaType!=null&&!resultJavaType.equals("void")){%>
     * @return <%=JastorUtils.getStingValue(result.getPropertyValue(DC.DESCRIPTION))%><%}%>
     * @throws AnzoException
     */
    public <%if(resultJavaType!=null){%><%=resultJavaType%><%}else{%>void<%}%> <%=operation.getName()%>(IOperationContext context<%for(int i=0;i<8;i++){%><%if (javaType[i]!=null){%>,<%=javaType[i]%> <%=parameterName[i]%><%}%><%}%>) throws AnzoException;

    /**
     * <% if(operation.getPropertyValue(DC.DESCRIPTION)!=null){%><%=JastorUtils.getStingValue(operation.getPropertyValue(DC.DESCRIPTION))%><%}%>
     *
     * @param context
     *            {@link IOperationContext} context for this operation
<%for(int i=0;i<8;i++){%>
<%
	if(propertyLocation[i]==1){
	    parameterName[i]="reader";
	    javaType[i]="String";
	    readerParam=i;
	}
%>
<%if(parameters[i]!=null&&parameterName[i]!=null&&propertyLocation[i]>-1){%>
     * @param <%=parameterName[i]%>
     *            <%=JastorUtils.getStingValue(parameters[i].getPropertyValue(DC.DESCRIPTION))%>
<%if(hasDefaultFormat[i]&&readerParam==i){%>,String
	 * @param <%=parameterName[i]%>Format
     *            format for <%=parameterName[i]%>
<%}%>
<%}%>
<%}%>
     * @param output
     *            {@link java.io.Writer} onto which output is written
<%if(resultHasDefaultFormat){%>
     * @param resultFormat
     *            format of result data
<%}%>
     * @throws AnzoException
     */
    public void <%=operation.getName()%>(IOperationContext context<%for(int i=0;i<8;i++){%><%if(parameters[i]!=null&&parameterName[i]!=null&&propertyLocation[i]>-1){%>,<%if (javaType[i]!=null){%><%=javaType[i]%><%}else{%><%=javaType[i]%><%}%> <%=parameterName[i]%><%}%><%if(hasDefaultFormat[i]&&readerParam==i){%>,String <%=parameterName[i]%>Format<%}%><%}%>, java.io.Writer output<%if(resultHasDefaultFormat){%>, String resultFormat<%}%>) throws AnzoException;
<%}%>
}
