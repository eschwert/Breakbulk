<%@ jet
		skeleton="generator.skeleton"
		package="org.openanzo.jet.exceptions.templates"
		class="ExceptionDefinitionsTemplate"
		imports="org.openanzo.jet.exceptions.ExceptionDefinitionParser org.openanzo.jet.exceptions.ExceptionDefinitionParser.ErrorTag org.openanzo.jet.exceptions.ExceptionDefinitionParser.ErrorGroup org.openanzo.jet.exceptions.ExceptionDefinitionParser.ErrorCode"%>

<% ExceptionDefinitionParser  parser = (ExceptionDefinitionParser)argument; %>
/*******************************************************************************
 * Copyright (c) 2007-2008 Cambridge Semantics Incorporated.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * File:        <%="$".toString()%>Source<%="$".toString()%>
 * Created by:  Generated Source from org.openanzo.rdf.utils.properties.jet
 * Created on:  Generated Source from org.openanzo.rdf.utils.properties.jet
 * Revision:	<%="$".toString()%>Id<%="$".toString()%>
 * 
 * Contributors:
 *     Cambridge Semantics Incorporated - initial API and implementation
 *******************************************************************************/
package <%=parser.getPackage()%>;
/**
 *  Exception constants
 *	@author Generated Source from org.openanzo.rdf.utils.exceptions.jet
 */
 
 public class ExceptionConstants{
  	/** String constant for ErrorMessageArguements tag */
    public static final String errorMessageArg = "ErrorMessageArg";

  
 	<% for (ErrorGroup errorGroup:parser.getErrorGroups()){ %>
 	  	/**<%if(errorGroup.hasDescription()) {%><%=errorGroup.getDescription()%> <%}%>*/
    	public interface <%=errorGroup.getName()%> {
    		/**Mask for <%=errorGroup.getName()%> */
    		public static final long MASK=1<<<%=errorGroup.getMask()%>;
    		<%for (ErrorCode errorCode:errorGroup.getErrorCodes()){%>
    			/** <%if(errorCode.hasDescription()){%><%=errorCode.getDescription()%> <%}%>*/
    			 public static final long <%=errorCode.getName()%> = <%=errorCode.getId()%> | MASK; //<%=(errorCode.getId()|(1<<errorGroup.getMask()))%>
    		<%}%>
    		<% for (ErrorGroup subGroup:errorGroup.getSubGroups()){ %>
		 	  	/**<%if(subGroup.hasDescription()) {%><%=subGroup.getDescription()%><%}%> */
		    	public interface <%=subGroup.getName()%> {
		    	/**Mask for <%=subGroup.getName()%> */
		    		public static final long MASK=1<<<%=subGroup.getMask()%>;
		    		<%for (ErrorCode errorCode2:subGroup.getErrorCodes()){%>
		    			/** <%if(errorCode2.hasDescription()) {%><%=errorCode2.getDescription()%> <%}%>*/
		    			 public static final long <%=errorCode2.getName()%> = <%=errorCode2.getId()%> | MASK; //<%=(errorCode2.getId()|(1<<subGroup.getMask()))%>
		    		<%}%>
		    		
		    	}
		 	<%}%>
    	}
 	<%}%>
 	
 	<% for (ErrorGroup errorGroup:parser.getErrorGroups()){ %>
 		 /** Is <%=errorGroup.getName()%> type */
    	public static boolean is<%=errorGroup.getName()%>Exception(org.openanzo.exceptions.AnzoException ae) {
        	return (ae.getErrorCode() & <%=errorGroup.getName()%>.MASK) != 0;
    	}
 	  		<% for (ErrorGroup subGroup:errorGroup.getSubGroups()){ %>
		 /** Is <%=subGroup.getName()%> type */
    	public static boolean is<%=errorGroup.getName()%>_<%=subGroup.getName()%>Exception(org.openanzo.exceptions.AnzoException ae) {
        	return (ae.getErrorCode() & <%=errorGroup.getName()%>.<%=subGroup.getName()%>.MASK) != 0;
    	}    	 	  
		 	<%}%>
 	<%}%>
 	
   
 }
 	