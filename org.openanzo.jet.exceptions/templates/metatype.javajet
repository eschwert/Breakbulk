<%@ jet 
		skeleton="generator.skeleton"
		package="org.openanzo.jet.exceptions.templates"
		class="MetatypeTemplate"
		imports="org.openanzo.jet.exceptions.PropertiesDefinitionParser org.openanzo.jet.exceptions.PropertiesDefinitionParser.Tag org.openanzo.jet.exceptions.PropertiesDefinitionParser.Property org.openanzo.jet.exceptions.PropertiesDefinitionParser.Description org.openanzo.jet.exceptions.PropertiesDefinitionParser.Example"%>

<% PropertiesDefinitionParser.PropertyGroup group = (PropertiesDefinitionParser.PropertyGroup)argument; %>
/*******************************************************************************
 * Copyright (c) 2007-2008 Cambridge Semantics Incorporated.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * File:        <%="$".toString()%>Source<%="$".toString()%>
 * Created by:  Generated Source from org.openanzo.rdf.utils.properties.jet
 * Created on:  Generated Source from org.openanzo.rdf.utils.properties.jet
 * Revision:	<%="$".toString()%>Id<%="$".toString()%>
 * 
 * Contributors:
 *     Cambridge Semantics Incorporated - initial API and implementation
 *******************************************************************************/
package <%=group.getPackageName() %>;
import org.openanzo.osgi.AnzoAttributeDefinition;

/**
 *  <% if(group.getDescription()!=null){%> <%=group.getDescription().getValue()%><%}%>
 *	@author Generated Source from org.openanzo.rdf.utils.properties.jet
 */
 
 public class <%=group.getClassName()%>Attributes{
 	<% for (Property property:group.getProperties()) { %>
	 
 	/**
	 * AnzoAttributeDefinition for "<%=group.getPrefix()%>.<%=property.getName() %>"<%if (property.getGeneralDescription()!=null){ for(Description description:property.getGeneralDescription()){%>
	 * <%=description.getValue()%><%}};if (property.getServerDescription()!=null){ %>
	 * <li><b>Server:</b><%=property.getServerDescription().getValue()%></li><%};if (property.getClientDescription()!=null){ %>
	 * <li><b>Client:</b><%=property.getClientDescription().getValue()%></li><%};if (property.getEmbeddedDescription()!=null){ %>
	 * <li><b>Embedded:</b><%=property.getEmbeddedDescription().getValue()%></li><%};%>
	 *<%if(property.hasExample()){%>
	 * Examples:<%if (property.getGeneralExample()!=null){ for(Example example:property.getGeneralExample()){%>
	 * <%=example.getValue()%><%}};if (property.getServerExample()!=null){%>
	 * <li><b>Server:</b><%=property.getServerExample().getValue()%></li><%};if (property.getClientExample()!=null){%>
	 * <li><b>Client:</b><%=property.getClientExample().getValue()%></li><%};if (property.getEmbeddedExample()!=null){%>
	 * <li><b>Embedded:</b><%=property.getEmbeddedExample().getValue()%></li><%};%><%}%><% for(Tag tag:property.getTags()){%>
	 * <%=tag.getType()%> <%=tag.getValue()%> <%}%>
	 */
	 
	 public static final AnzoAttributeDefinition  <%=PropertiesDefinitionParser.capFirstLetter(property.getName())%> = new AnzoAttributeDefinition() {
            public String getName() {
                return "<%=property.getName()%>";
            }
			public boolean isRestartRequired() {
                return <%=property.isRestartRequired()%>;
            }
            public String getID() {
                return "<%=group.getPrefix()%>.<%=property.getName() %>";
            }

            public String getDescription() {
                return ""<%if (property.getGeneralDescription()!=null){ for(Description description:property.getGeneralDescription()){%>+"<%=description.getValue()%>"<%}}%>;
            }

            public String validate(String value) {
            	<%if (property.getType().equals(PropertiesDefinitionParser.PropType.INTEGER) && property.getMinValue()!=null || property.getMaxValue()!=null){%>
                try {
                    int _val = Integer.valueOf(value);
                    <%if (property.getMinValue()!=null) {%>
                    	if(_val< <%=property.getMinValue()%>){return "Value must be greater than <%=property.getMinValue()%>";}
                    <%}%>
                     <%if (property.getMaxValue()!=null) {%>
                    if(_val> <%=property.getMaxValue()%>){return "Value must be less than <%=property.getMaxValue()%>";}
                    <%}%>
                    return "";
                } catch (NumberFormatException nfe) {
                    return "Value is not an Integer";
                }
                <%}else if (property.getType().equals(PropertiesDefinitionParser.PropType.LONG) && property.getMinValue()!=null || property.getMaxValue()!=null){%>
                  try {
                    long _val = Long.valueOf(value);
                    <%if (property.getMinValue()!=null) {%>
                    	if(_val< <%=property.getMinValue()%>){return "Value must be greater than <%=property.getMinValue()%>";}
                    <%}%>
                     <%if (property.getMaxValue()!=null) {%>
                    if(_val> <%=property.getMaxValue()%>){return "Value must be less than <%=property.getMinValue()%>";}
                    <%}%>
                    return "";
                } catch (NumberFormatException nfe) {
                    return "Value is not a Long";
                }
                <%}else{%>return "";<%}%>
            }

            public int getType() {
                return <%if(property.getType().equals(PropertiesDefinitionParser.PropType.STRING)){%>AnzoAttributeDefinition.STRING;<%}
                else if (property.getType().equals(PropertiesDefinitionParser.PropType.INTEGER)){%>AnzoAttributeDefinition.INTEGER;<%}
                else if (property.getType().equals(PropertiesDefinitionParser.PropType.BOOLEAN)){%>AnzoAttributeDefinition.BOOLEAN;<%}
                else if (property.getType().equals(PropertiesDefinitionParser.PropType.LONG)){%>AnzoAttributeDefinition.LONG;<%}else{
                %>AnzoAttributeDefinition.STRING;<%}%>
            }

            public String[] getOptionValues() {
                return null;
            }

            public String[] getOptionLabels() {
                return null;
            }

            public String[] getDefaultValue() {
                return <%if(property.getDefaultValue()!=null){%>new String[] {<%
                if (property.getType().equals(PropertiesDefinitionParser.PropType.INTEGER)){%>Integer.toString(<%=property.getDefaultValue()%>)<%}
                else if (property.getType().equals(PropertiesDefinitionParser.PropType.BOOLEAN)){%>Boolean.toString(<%=property.getDefaultValue()%>)<%}
                else if (property.getType().equals(PropertiesDefinitionParser.PropType.LONG)){%>Long.toString(<%=property.getDefaultValue()%>)<%}else{
                if(property.getQuoteDefault()){%>"<%}%><%=property.getDefaultValue()%><%if(property.getQuoteDefault()){%>"<%}%><%}%>}<%}else{%> null<%}%>;
            }

            public int getCardinality() {
                return 0;
            }
        };
        
    <%}%> 
 }
 	