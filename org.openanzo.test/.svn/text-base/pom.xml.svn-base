<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <!--
		Copyright (c) 2004, 2007-2009 IBM Corporation and Cambridge Semantics Incorporated. All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this
		distribution, and is available at http://www.eclipse.org/legal/epl-v10.html Contributors: IBM Corporation - initial API and implementation Cambridge Semantics Incorporated - Fork to Anzo
	-->
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <properties>
        <anzo.regress-build>openanzo-${project.version}</anzo.regress-build>
        <anzo.regress-project>openanzo-maven</anzo.regress-project>
        <anzo.regress-server.host>localhost</anzo.regress-server.host>
        <anzo.regress-server.port>8082</anzo.regress-server.port>
        <anzo.regress-combus.port>61618</anzo.regress-combus.port>
        <anzo.regress-ldap.port>10391</anzo.regress-ldap.port>
        <anzo.regress-jmx.port>8383</anzo.regress-jmx.port>
        <anzo.regress-jvm-debugger.port>8010</anzo.regress-jvm-debugger.port>
        <anzo.selenium-server.port>9191</anzo.selenium-server.port>
        <anzo.home>${basedir}/../openanzo-maven/target/assembly</anzo.home>
        <anzo.selenium-maven-plugin.version>1.0.1</anzo.selenium-maven-plugin.version>
    </properties>
    <parent>
        <artifactId>openanzo-parent</artifactId>
        <groupId>org.openanzo</groupId>
        <version>3.2.0</version>
        <relativePath>../openanzo-maven/pom.xml</relativePath>
    </parent>
    <groupId>org.openanzo</groupId>
    <artifactId>org.openanzo.test</artifactId>
    <name>${project.artifactId}</name>
    <description>Openanzo Tests</description>
    <url>http://www.openanzo.org/openanzo/${project.artifactId}</url>
    <organization>
        <name>Cambridge Semantics Inc.</name>
        <url>http://www.cambridgesemantics.com</url>
    </organization>
    <inceptionYear>2007</inceptionYear>
    <licenses>
        <license>
            <name>Eclipse Public License v1.0</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <dependencies>
        <dependency>
            <groupId>org.openanzo</groupId>
            <artifactId>org.openanzo.client</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openanzo</groupId>
            <artifactId>org.openanzo.servlet</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium.client-drivers</groupId>
            <artifactId>selenium-java-client-driver</artifactId>
            <version>1.0.2</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openanzo</groupId>
            <artifactId>openanzo-assembly</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.ops4j.pax.logging</groupId>
                    <artifactId>pax-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.ops4j.pax.logging</groupId>
                    <artifactId>pax-logging-service</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openanzo</groupId>
            <artifactId>openanzo-client-assembly</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.ops4j.pax.logging</groupId>
                    <artifactId>pax-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.ops4j.pax.logging</groupId>
                    <artifactId>pax-logging-service</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.0</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.web</groupId>
            <artifactId>pax-web-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.web</groupId>
            <artifactId>pax-web-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.web</groupId>
            <artifactId>pax-web-spi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ops4j.pax.web</groupId>
            <artifactId>pax-web-runtime</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>unix-xvfb-for-selenium</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>!mac os x</name>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>selenium-maven-plugin</artifactId>
                        <version>${anzo.selenium-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>xvfb</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>xvfb</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>regression</id>
            <activation>
                <property>
                    <name>!foo</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!--
                        Anzo regression tests. See http://www.openanzo.org/projects/openanzo/wiki/AutoBuild for info on how to run the build with these tests. These regression tests require a running anzo server. Pre- and post-integration-test phases start and stop a hsql server, allowing mvn to run normal surefire units tests during the integration-test phase. These tests are only run when the regression profile is used. Note that this entire project is dedicated to running regression tests since the
                        normal test phase (above) has to be disabled lest these test be run when a server is not running.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <configuration>
                                    <skip>false</skip>
                                    <argLine>-Xmx1024m</argLine>
                                    <includes>
                                        <include>**/TestAnzoClientDatasetReplicaGraphQueries.java</include>
                                        <include>**/TestAnzoClientDatasetMixedGraphQueries.java</include>
                                        <include>**/TestAnzoClientDatasetServerGraphQueries.java</include>
                                        <include>**/TestAnzoClientIntegration.java</include>
                                        <include>**/TestAnzoClientReplicaGraphReplicaQueries.java</include>
                                        <include>**/TestAnzoClientServerGraphReplicaQueries.java</include>
                                        <include>**/TestAnzoClientServerQueries.java</include>
                                        <!--<include>**/ClientJS.java</include> 
										<include>**/MessagingJS.java</include>
										<include>**/RdfJS.java</include>
										<include>**/LoggingJS.java</include>
										<include>**/TestEncryptedTokenAuthenticationRegression.java</include>-->
										<include>**/TestEncryptedTokenAuthorizationBlocksServletAccess.java</include>
                                        <include>**/TestAuthorization.java</include>
                                        <include>**/TestBinaryStore.java</include>
                                        <include>**/TestCommandLineInterface.java</include>
                                        <include>**/TestCommands.java</include>
                                        <include>**/TestComplicatedInputs.java</include>
                                        <include>**/TestDatasetBasicGraphQueries.java</include>
                                        <include>**/TestDatasets.java</include>
                                        <include>**/TestDateTime.java</include>
                                        <include>**/TestGraphUUIDCachedResolver.java</include>
                                        <include>**/TestIntegratedTextQueries.java</include>
                                        <include>**/TestQueries.java</include>
                                        <include>**/TestReplicaGraphs.java</include>
                                        <include>**/TestReplication.java</include>
                                        <include>**/TestSemanticServiceExecution.java</include>
                                        <include>**/TestServerGraphs.java</include>
                                        <include>**/TestTransactions.java</include>
                                        <include>**/TestUpdates.java</include>
                                    </includes>
                                    <systemProperties>
                                        <property>
                                            <name>org.openanzo.test.environment</name>
                                            <value>regress</value>
                                        </property>
                                        <property>
                                            <name>log4j.debug</name>
                                            <value>true</value>
                                        </property>
                                        <property>
                                            <name>log4j.configuration</name>
                                            <value>log4j.properties</value>
                                        </property>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-run-regressions</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <tasks>
                                        <!--
								 			Unzip an assembly so it can be tested.
										-->
                                        <echo message="Unarchiving distribution assembly" />
                                        <unzip src="../openanzo-maven/openanzo-assembly/target/${anzo.regress-build}-dist.zip" dest="../${anzo.regress-project}/target" />
                                        <move file="../${anzo.regress-project}/target/${anzo.regress-build}" toFile="${anzo.home}" />
                                        <!--
											Start up the anzo server from the jars in unzipped assembly. Provide server with custom regression configuration: use hsql, an in memory SQL database and runs run on non-standard ports so it does not interfere with any anzo servers already
											running on system
										-->
                                        <ant target="start" antfile="regress-server-control.xml">
                                            <property name="anzo.regress-server.dir" value="${anzo.home}" />
                                            <property name="anzo.regress-server.host" value="${anzo.regress-server.host}" />
                                            <property name="anzo.regress-server.port" value="${anzo.regress-server.port}" />
                                            <property name="anzo.regress-server.spawn" value="false" />
                                            <property name="anzo.regress-combus.port" value="${anzo.regress-combus.port}" />
                                            <property name="anzo.regress-ldap.port" value="${anzo.regress-ldap.port}" />
                                            <property name="anzo.regress-jmx.port" value="${anzo.regress-jmx.port}" />
                                            <property name="anzo.regress-jvm-debugger.port" value="${anzo.regress-jvm-debugger.port}" />
                                        </ant>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-run-regressions</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <tasks>
                                        <ant target="stop" antfile="regress-server-control.xml">
                                            <property name="anzo.regress-server.dir" value="${anzo.home}" />
                                            <property name="anzo.regress-server.host" value="${anzo.regress-server.host}" />
                                            <property name="anzo.regress-server.port" value="${anzo.regress-server.port}" />
                                            <property name="anzo.regress-server.spawn" value="false" />
                                            <property name="anzo.regress-combus.port" value="${anzo.regress-combus.port}" />
                                            <property name="anzo.regress-ldap.port" value="${anzo.regress-ldap.port}" />
                                            <property name="anzo.regress-jmx.port" value="${anzo.regress-jmx.port}" />
                                            <property name="anzo.regress-jvm-debugger.port" value="${anzo.regress-jvm-debugger.port}" />
                                        </ant>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>junit</groupId>
                                <artifactId>junit</artifactId>
                                <version>4.0</version>
                                <scope>compile</scope>
                            </dependency>
                            <dependency>
                                <groupId>ant</groupId>
                                <artifactId>ant-junit</artifactId>
                                <version>1.6.5</version>
                                <scope>compile</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>selenium-maven-plugin</artifactId>
                        <version>${anzo.selenium-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>anzo-regress-selenium-server-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start-server</goal>
                                </goals>
                                <configuration>
                                    <port>${anzo.selenium-server.port}</port>
                                    <background>true</background>
                                    <logOutput>true</logOutput>
                                    <multiWindow>true</multiWindow>
                                    <verifyBrowser>*firefox</verifyBrowser>
                                </configuration>
                            </execution>
                            <execution>
                                <id>anzo-regress-selenium-server-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop-server</goal>
                                </goals>
                                <configuration>
                                    <port>${anzo.selenium-server.port}</port>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>nightly-build</id>
            <!--
				Deploy the nightly build to the download site. We do this here in the openanzo-test
				project rather than in the openanzo-assembly project because we only want to deploy this
				after we are sure the regression tests have passed. Maven runs the complete build cycle
				for each project before moving onto the next project. So if we set this to the deploy phase of
				the openanzo-assembly project, then it'll be deployed before the regression tests are run
				on the assembly.
			-->
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembly-deployment</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>deploy</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <tasks>
                                        <copy todir="/var/www/html/openanzo/downloads/${releaseType}">
                                            <fileset dir="../openanzo-maven/openanzo-assembly/target">
                                                <include name="**/*.zip" />
                                                <include name="**/*.tar.gz" />
                                            </fileset>
                                        </copy>
                                        <copy todir="/var/www/html/openanzo/downloads/${releaseType}">
                                            <fileset dir="../openanzo-maven/openanzo-client-assembly/target">
                                                <include name="**/*.zip" />
                                                <include name="**/*.tar.gz" />
                                            </fileset>
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>integration-deploy</id>
            <!--
				The autobuild server uses this profile to publish the final built zip files
				for use by the Anzo.NET build. The Anzo.NET build expects to download the latest successful
				build to use for running its integration tests. This is similar to the nightly build deployment
				but it is done by the main, more frequent build and the builds are placed in a different location. 
			-->
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assembly-deployment-for-dotnet-integration-testing</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <tasks>
                                        <property name="anzo.integration.package.name" value="openanzo-${project.version}-r${BUILD_ID}-dist.zip" />
                                        <copy file="../openanzo-maven/openanzo-assembly/target/openanzo-${project.version}-dist.zip" tofile="/var/www/html/openanzo/downloads/integration-builds/${anzo.integration.package.name}" />
                                        <echo message="${BUILD_ID}" file="/var/www/html/openanzo/downloads/integration-builds/LATEST.txt" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
